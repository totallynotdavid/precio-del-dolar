[tool.poetry]
name = "perexchange"
version = "0.1.0"
description = ""
authors = ["David <contacto@altmails.com>"]
license = "MIT"
readme = "README.md"

[tool.poetry.scripts]
start = "perexchange.main:main"

[tool.poetry.dependencies]
python = ">=3.9,<4.0"
requests = "^2.32.3"
beautifulsoup4 = "^4.12.3"
flask = "^3.0.3"
pydantic = "^2.9.2"
sqlalchemy = "^2.0.35"
httpx = "^0.27.2"
apscheduler = "^3.10.4"
pytz = "^2024.2"
pydantic-settings = "^2.5.2"
psycopg2 = "^2.9.9"
aiosqlite = "^0.20.0"

[tool.poetry.group.dev.dependencies]
ruff = "^0.6.9"
black = "^24.8.0"
pre-commit = "^4.0.1"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.black]
skip-string-normalization = true
line-length = 100

[tool.ruff]
# Same as Black.
line-length = 100

lint.select = [
    "E",  # pycodestyle errors (settings from FastAPI, thanks, @tiangolo!)
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "C",  # flake8-comprehensions
    "B",  # flake8-bugbear
]
lint.ignore = [
    "E501",  # line too long, handled by black
    "C901",  # too complex
]

[tool.ruff.lint.isort]
order-by-type = true
relative-imports-order = "closest-to-furthest"
extra-standard-library = ["typing"]
section-order = ["future", "standard-library", "third-party", "first-party", "local-folder"]
known-first-party = []
